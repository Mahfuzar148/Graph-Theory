#include<bits/stdc++.h>
using namespace std;
vector<int>gp[100005];
bool vis[100005];
int c ;
int DFS(int root)
{
    c++;
    vis[root] = 1;
    for(auto child:gp[root])
    {
        if(vis[child] == 0)
        {
            DFS(child);
        }
    }
    return c;
}

int main()
{
    int node,edge;
    cin>>node>>edge;
    for(int i=1;i<=edge;i++)
    {
        int p,c;
        cin>>p>>c;
        gp[p].push_back(c);
        gp[c].push_back(p);
    }

    int cnt = 0;
    int mx = INT_MIN;
    for(int i=1;i<=node;i++)
    {

        if(vis[i]==0)
        {

            int c1 = DFS(i);
            cout<<"Number of nodes in a connected components = "c1 <<endl;
            c = 0;
            ///max node 
            mx = max(mx,c1);
            cnt++;
        }
    }
    cout<<endl;
    cout<<"Number of connected components = "<<cnt<<" "<<"Number of max nodes = "<<mx<<endl;

    return 0;

}
