#include<bits/stdc++.h>
using namespace std;
const int N = 1e5+10;
vector<int>v[N];
bool vis[N],col[N];
bool dfs(int node,int c)
{
    vis[node] = 1;
    col[node] = c;
    for(auto child : v[node])
    {
        if(vis[child] == 0)
        {
            if(dfs(child,c^1)==false)
            {
                return false;
            }
        }
        else
        {
            if(col[node]==col[child])
            {
                return false;
            }
        }
    }
    return true;
}
int main()
{
    int n,e;
    cin>>n>>e;
    while(e--)
    {
        int x,y;
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    bool ans = dfs(1,1);
    if(ans==true)
    {
        cout<<"Bipartite graph"<<endl;
    }
    else
    {
        cout<<"Not bipartite graph"<<endl;
    }
    return 0;

}
